spring:
  datasource:
    url: jdbc:mysql://47.106.237.143:3306/test?characterEncoding=UTF-8
    #&autoReconnect=true&failOverReadOnly=false
    #&useSSL=false&allowPublicKeyRetrieval=true
    password: Zhangpp123!
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      initialSize: 5
      maxActive: 30
      maxWait: 30000
      validationQuery: select 1
      testWhileIdle: true
      removeAbandoned: true
      filters: stat,wall #配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
  thymeleaf:
    prefix: classpath:/templates/
    check-template-location: true
    suffix: .html
    encoding: UTF-8
    mode: LEGACYHTML5
    cache: false
  redis:
    host: 47.106.237.143
    port: 6379
    password:
  cache:
    type: redis
debug: false
mybatis:
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.zhang.firsapplication.bean
  configuration:
    # 使用jdbc的getGeneratedKeys 可以获取数据库自增主键值
    use-generated-keys: true
    # 使用列别名替换列名，默认true。如：select name as title from table
    use-column-label: true
    # 开启驼峰命名转换，如：Table(create_time) -> Entity(createTime)。不需要我们关心怎么进行字段匹配，mybatis会自动识别`大写字母与下划线`
    map-underscore-to-camel-case: true
#  configuration:
#    map-underscore-to-camel-case: true
# 显示mybatis执行的sql语句
logging:
  level:
    com:
      zhang:
        firsapplication: debug
    org:
      springframework:
        data:
          redis: debug
